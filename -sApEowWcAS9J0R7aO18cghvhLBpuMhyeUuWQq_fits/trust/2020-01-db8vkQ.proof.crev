----- BEGIN CREV PROOF -----
kind: trust
version: -1
date: "2020-01-10T21:45:23.179853140+01:00"
from:
  id-type: crev
  id: "-sApEowWcAS9J0R7aO18cghvhLBpuMhyeUuWQq_fits"
  url: "https://github.com/HeroicKatora/crev-proofs"
ids:
  - id-type: crev
    id: ZCBwWlOeJyU79adJqX9-irGH5wrmuYxUPXeSrFKuayg
    url: "https://github.com/Lokathor/crev-proofs"
trust: medium
comment: |-
  Has proven understanding of unsafe reasoning, I think. It's basically as good
  as it gets in the open ecosystem. Also the author of `bytemuck` which safely
  encapsulates byte-level transmutes so has some experience in the domain. He
  has also contributed to the unsafe code guidelines directly.
----- SIGN CREV PROOF -----
FS6cmYIW72me4WNlCmLca2ZqvyBDL10Cmk9AztBKOagKeBv0vRKmmkFTE1UeSwf4x_9TRM_K8TaeO4R7Y3MzDA
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: trust
version: -1
date: "2020-01-11T00:03:12.895332406+01:00"
from:
  id-type: crev
  id: "-sApEowWcAS9J0R7aO18cghvhLBpuMhyeUuWQq_fits"
  url: "https://github.com/HeroicKatora/crev-proofs"
ids:
  - id-type: crev
    id: lr2ldir9XdBsKQkW3YGpRIO2pxhtSucdzf3M5ivfv4A
    url: "https://git.sr.ht/~icefox/crev-proofs"
trust: low
comment: |-
  The reviews are very, very short. Seems to shy away from really reviewing any
  unsafe which is positive since many review appear otherwise superficial. That
  said, a few checks at least appear accurate and core values (such as
  embracing short code, doing no IO, explicitly forbidding unsafe) are all
  clearly visible. I would however not trust the reviews to spot actual DOS
  vulnerabilities such as botched integer arithmetic, bad parameters to chunk
  iterators, etc.
----- SIGN CREV PROOF -----
Th9dNZtCudkEI3sXuNjCjsrMw0_aZ7h9pxUoYKrAQWBmEA06taR8W3dxDToE5cpw2MmLuyPywlZLZpsK7VyyAQ
----- END CREV PROOF -----

